En este laboratorio, su tarea será escribir consultas SQL que puedan responder preguntas sobre una base de datos de canciones. Como parte de este laboratorio, le proporcionaremos una base de datos SQLite llamada songs.db, dentro de la cual hay información tomada de Spotify sobre varias canciones diferentes y sus artistas. En última instancia, lo primero que querrá hacer es comprender la estructura o el esquema de las tablas en esta base de datos.

Dentro de songs.db, encontrará una tabla llamada canciones que tiene bastantes columnas diferentes. Cada canción tiene un ID, que es un INTEGER, el nombre de la canción, que es algún tipo de texto, el ID del artista, que es un INTEGER que representa al artista de la canción - volveremos a eso en un momento - y luego otra información sobre la canción también, su capacidad de baile, su energía, su tecla, su volumen, así como otras propiedades de la canción también.

Ahora, echemos un vistazo al ID del artista. Para representar a los diversos artistas diferentes que pueden tener canciones, hay otra tabla en esta base de datos llamada tabla artistas. Cada artista tiene un ID, que es un INTEGER, y un nombre, que será simplemente algún tipo de texto. Y ahora, la columna de ID del artista de la tabla de canciones será un INTEGER que corresponde al ID de uno de estos artistas.

Entonces, veamos cómo se ve realmente esta base de datos. Una vez que haya descargado el laboratorio, en mi terminal puedo escribir sqlite3 songs.db para abrir esta base de datos. Y si quisiera, podría escribir .schema para tener una idea del esquema de esta base de datos. Vería de nuevo, aquí está CREATE TABLE songs, junto con todas las columnas para canciones, así como CREATE TABLE artists, para ver todos esos artistas.

Así que si quisiera ver cuáles son las canciones, por ejemplo, podría escribir una consulta como SELECT star FROM songs, para seleccionar todas las canciones. Y vería todas las canciones, junto con todas las columnas que tengo para cada una de esas filas individuales. Tal vez no quisiera todas esas columnas. Así que también podría filtrar mis resultados. Podría escribir una consulta como SELECT name FROM song para seleccionar solo la columna de nombre de mi tabla de canciones. Si hago eso, solo veré los nombres de cada una de esas canciones.

En última instancia, en este laboratorio, le haremos ocho preguntas diferentes sobre esta base de datos, y su tarea será escribir consultas para responder cada una de esas preguntas. Le hemos dado archivos en los que debe escribir esas respuestas. Por ejemplo, 1.sql es donde incluirá su respuesta a la primera pregunta, escribiendo una consulta SQL aquí que puede usar para responder una pregunta en particular.

¿Cuáles podrían ser esas peticiones? Bueno, por ejemplo, en 1.sql, escribirá una consulta SQL para listar los nombres de todas las canciones en la base de datos. Y esa, de hecho, es una consulta que acabo de mostrarle: SELECT name FROM songs. Entonces, dentro de 1.sql, escribiría esta consulta, SELECT name FROM songs, como una consulta que podría ejecutar para obtener los nombres de todas las canciones en la base de datos.

En última instancia, las otras peticiones le pedirán otra información sobre la base de datos. Quizás no solo mirando los nombres de las canciones, sino también mirando a los artistas de las canciones, mirando el volumen de esas canciones, mirando su capacidad de baile, tal vez otros factores también, filtrando y seleccionando y uniendo tablas juntas según sea necesario para obtener los resultados que desea en última instancia para responder a todas estas preguntas solo basándose en una base de datos única.

Mi nombre es Brian, y esto fue Songs.