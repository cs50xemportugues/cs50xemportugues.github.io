Lo que quiero hacer ahora es volver al IDE y mostrarles un poco sobre cómo podemos manipular el objeto documento mediante JavaScript y jQuery para cambiar el color de una sección de una página web. Aquí tenemos una página web muy simple (que pueden descargar al revisar el video) con un montón de botones diferentes. Como pueden ver en la parte superior, hay una sección que dice "¡Cambia mi color!" Vamos a intentar cambiar el color de fondo de esa sección de la página y aparentemente lo haré de cuatro maneras diferentes.

Hay funciones individuales para el color de fondo escritas en JavaScript; una sola función para cambiar el color de fondo, tal vez una mejora de diseño; un manejador de eventos - recordemos del final de nuestro video sobre JavaScript, hablamos un poco sobre manejadores de eventos, así que esta será otra oportunidad para verlos en acción; y un ejemplo donde hacemos lo mismo utilizando jQuery en lugar de utilizar JavaScript crudo. 

Comencemos mirando el código de esta página. En mi IDE abrimos la pestaña de HTML. Como pueden ver, estoy cargando un par de diferentes scripts de JavaScript al comienzo de mi página. Básicamente, estoy haciendo un "pound include" (como en C) de un par de archivos de JavaScript: uno para cada uno de los cuatro tipos diferentes de manipulación de color que vamos a hacer. Luego, aquí, no es un HTML particularmente bien diseñado, pero cumple con el trabajo. Tengo una sección con un conjunto de cinco botones para los de color de fondo, uno para pasar el color como parámetro, otro para el manejador de eventos y otro para los de jQuery. Todos ellos se ven un poco diferentes.

Comencemos por mirar los de color individuales. Realmente no hay mucho en esto. Ya vieron que escribí esas cinco funciones diferentes: Cambiar a púrpura, cambiar a verde, cambiar a naranja, cambiar a rojo y cambiar a azul. Y todo lo que hacen es, mediante JavaScript puro, toman el elemento por ID de "colorDiv", que es el elemento que estamos tratando de cambiar el color de fondo, y establecen su atributo de estilo "backgroundColor" en púrpura, verde, naranja, rojo o azul, como se describe. 

Luego tenemos uno de propósito general, donde en su lugar estamos pasando un color como parámetro. Tal vez recuerden, mirando el HTML por un segundo, que para ese estoy pasando los colores púrpura, verde, naranja, rojo y azul como parámetros a esa función. En el de propósito general, simplemente estoy diciendo que lo que sea que haya pasado como parámetro, establezca el "backgroundColor" del "colorDiv" en ese color en lugar de en los anteriores. 

Luego tenemos el manejador de eventos. Así que recuerden, si miramos el manejador de eventos, la línea es exactamente la misma para los cinco. Pero tal vez recuerden de nuestra discusión sobre los manejadores de eventos que la forma en que funciona un manejador de eventos es que cuando hacen clic en un botón, por ejemplo, el manejador de eventos captura información sobre lo que lo activó. 
Así que sabe, por ejemplo, qué botón hicieron clic. Y todos esos botones (nuevamente voy a volver al HTML por un segundo) tienen un título diferente: púrpura, verde, naranja, rojo y azul, con letras mayúsculas, es la palabra que aparece en el botón. Así que tengo una pequeña forma de distinguir entre todos ellos. Pero resulta que, para que mi cambio de color funcione, no puedo pasar un nombre de color en mayúscula. Tengo que pasar uno en minúscula. Así que en su lugar voy a establecer el "backgroundColor" del "colorDiv" como el objeto que activó el evento en primer lugar. Voy a mirar su propiedad de "InnerHTML" -aquí es donde entra en juego esa propiedad-, lo que voy a hacer con ella es transformar toda esa cadena, de modo que la 'P' mayúscula en púrpura se convierta en minúscula. 
Entonces, básicamente, lo que está sucediendo aquí es que cuando hago clic en un botón, digamos que hago clic en el botón púrpura, lo que sucede es que la P mayúscula en púrpura se convierte en minúscula y luego esa palabra 'púrpura' se convierte en el color que voy a establecer como "Background-Color". 
Espero que esto tenga sentido. De nuevo, lo que estoy haciendo es hacer clic en un botón. Ese botón tiene un título. Tomo el título de ese botón, el "InnerHTLM" entre las etiquetas del botón, lo hago todo en minúscula. Y ese es un color que puedo asignar a "backgroundColor". 
Nuevamente, pueden jugar con esto ustedes mismos mientras tantean si están siguiendo este video y quizás establecer algunos colores diferentes para ver que también pueden hacer este cambio. 

Luego tenemos la versión de jQuery de esto. Y echaremos un vistazo al HTML de nuevo por un segundo aquí. Se ve un poco diferente. No estoy especificando un "onClick" esta vez. Estoy creando una nueva clase llamada "un botón de jQuery". Pero no parece haber ninguna función que sea llamada. Bueno, ese es un efecto secundario de lo que está sucediendo en jQuery. Y la forma en que funciona jQuery -o una de las formas en que jQuery puede trabajar- es que podemos hacer algo como esto. Esto utiliza funciones anónimas. Recuerde de JavaScript que tenemos esta noción de funciones anónimas. Podemos tener funciones que no tienen nombres. 
Así que lo que está sucediendo aquí es que cuando el objeto "document" -nuevamente aparece esa palabra "document" - está completamente cargado o listo, la página va a ejecutar la siguiente función. Va a decir: voy a buscar cada instancia en la que algo de clase -eso es lo que el punto significa, recuerda eso del CSS- con la clase JQ aparece en la página. Y cuando se hace clic en cualquiera de esos botones, voy a ejecutar esta otra función anónima que va a hacer básicamente lo que acabamos de ver en el último ejemplo, donde transformamos todo el texto del botón en minúscula, y eso se convierte en un nombre de color que podemos asignar. Pero lo voy a hacer usando la sintaxis de jQuery en lugar de la sintaxis de JavaScript. 
Así que de nuevo, lo que está sucediendo aquí es que el documento, la página, se carga completamente. Y cuando está así, la siguiente función se aplica a la página. 
A cada botón de jQuery se le da este atributo adicional, este "onClick", tal que cuando hacen clic, se asigna un color basándose en cualquier texto escrito en el botón. De nuevo, no vamos a entrar en muchos detalles sobre jQuery en sí mismo. Eso es más bien una tarea para hacer en casa. Pero esta versión que están aquí es exactamente la misma que la versión de manejador de eventos que recién vimos para el JavaScript puro, excepto que está escrita en el estilo de jQuery. Y si voy a la página, en realidad las cuatro funcionan. Puedo hacer clic aquí en el púrpura, aquí en el verde. Puedo hacer clic en el naranja, el rojo. Todos hacen exactamente lo mismo. Simplemente lo hacen de un par de maneras diferentes. De modo que espero que puedan utilizar este ejemplo para tener una mejor comprensión de cómo utilizar funciones en JavaScript, cómo utilizar eventos en JavaScript y tal vez probar en jQuery. 
Si desean aprender más sobre jQuery, más allá de lo que hablamos en este video, pueden ir a la documentación de jQuery, que está disponible en el sitio web que ven en la pantalla aquí. Es un gran lugar para aprender sobre algunas de las cosas más interesantes que pueden hacerse con jQuery. Y veremos un poco más sobre esto en nuestro video sobre AJAX también. 
Soy Doug Lloyd. Esto es CS50.