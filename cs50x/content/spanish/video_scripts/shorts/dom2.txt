Volviendo a las diapositivas, hablemos un poco sobre cómo podríamos lograrlo. Nuevamente, el objeto documento, como pudiste ver cuando lo estábamos observando en la Consola, es bastante grande. Hay muchas cosas allí. No vamos a cubrir todo, porque no todo será realmente necesario cuando comiences a trabajar con él. Pero quiero cubrir un par de las propiedades más importantes que podrías usar cuando estés trabajando con el objeto documento, así como un par de los métodos, en un momento.

Una de ellas, por ejemplo, es InnerHTML, que contiene el HTML dentro de un conjunto de etiquetas. Así que, por ejemplo, la InnerHTML de la etiqueta de título, si yo fuera a entrar en esa sección, sería "Hola, mundo" o cualquier cosa que haya llamado, cualquier título real de mi página. Esa es la InnerHTML de la etiqueta de título, o el nodo de título o el objeto de título dentro del objeto document global. nodeName sería, de manera similar, simplemente el título del nodo que acabamos de describir, o la sección del objeto que acabamos de describir.

ID. Como recordarás de nuestro video sobre HTML y CSS, podemos especificar un atributo de ID opcional para ciertos elementos HTML. Generalmente lo usamos en el contexto de CSS, por ejemplo, para dar estilo a un nodo en particular o un conjunto de etiquetas en nuestro HTML con un estilo específico. Podemos darle un ID para que el CSS sepa a qué sección de la página aplicar ese estilo. Entonces, esta propiedad solo nos permitiría averiguar cuál es exactamente el ID de ese nodo en particular. parentNode es una referencia al nodo de un nivel superior.

Entonces, de nuevo, si estoy mirando el nodo de título, seguiré utilizando ese ejemplo por ahora, el nodo padre de eso sería el head, porque el título está anidado dentro del head en esa estructura de árbol. childNodes es algo así como el opuesto de eso. Es lo que hay debajo de donde estoy actualmente. Entonces, si estoy usando el nodo del cuerpo como ejemplo ahora, así que hemos anidado en esa sección del árbol, los nodos secundarios del nodo del cuerpo serían ese h2 y ese p y ese a. Esos serían los tres nodos secundarios de esa área. attributes, una matriz de atributos de un elemento HTML. Un buen ejemplo aquí es la etiqueta de imagen.

Entonces, si estoy navegando a través del objeto document usando JavaScript y llego a una etiqueta de imagen y quiero saber qué atributos tiene, bueno, puede recordar que los atributos de una imagen incluyen, por ejemplo, su fuente. ¿Cuál es el archivo fuente? O tal vez también he especificado parámetros opcionales de altura y ancho. Esos serían todos los atributos asociados con ese nodo en particular del objeto document. Y luego, style, que es otra forma en que podemos realmente dar estilo al aspecto de una página. Y en unos momentos, estaremos pasando por un ejemplo en el que manipulamos específicamente esta propiedad, la propiedad de estilo, para cambiar algo. Pero es análogo a la aplicación de CSS de un área o sección particular de la página. Así que esas son algunas de las propiedades más comunes. También hay cuatro métodos comunes que podrías ver. Y nuevamente, hay muchos más que eso. Pero aquí hay cuatro que podría usar cuando comienzas a trabajar con el objeto document. getElementById. Y observa que ahora, porque estamos hablando de métodos, todas estas son funciones que opcionalmente pueden tomar parámetros.

En este caso, estamos buscando un elemento con un ID específico. Ese es el parámetro que se está pasando allí. Entonces, si tal vez hemos aplicado estilos a un elemento particular usando CSS y le hemos dado ese atributo de ID opcional, este método iría y navegaría a través de todo el objeto document para nosotros y encontraría ese nodo específico, uno de esos más abajo en el árbol o más anidado dentro del objeto. Encontraría esa sección de la página y te devolvería el objeto desde ese punto hacia abajo. getElementsByTagName. Observa que dice conseguir elementos. En este caso, por ejemplo, podría encontrar todas las instancias en las que uso una etiqueta de B. Entonces, me daría una matriz de todas las secciones etiquetadas en negrita de mi sitio. appendChild, básicamente me permite agregar un nodo adicional debajo de donde estoy actualmente, lo que me permite expandir el número de cosas. Podría querer agregar un nuevo elemento sobre la marcha a la parte del cuerpo de mi sitio web. Podría agregar tal vez una nueva etiqueta de párrafo o un H3 o algo más que no estaba allí antes usando este método aquí. Y luego, removeChild es algo así como lo opuesto a eso. Elimina una sección de la página eliminando esa parte del HTML, todo ese nodo, del objeto document.

Quiero señalar una cosa aquí que causa a los programadores muchos dolores de cabeza. Sé que me ha causado muchos dolores de cabeza. Cuando usas el atributo getElementById, observa que la D en ID es minúscula. Por lo general, cuando usamos el término ID para la identificación, suele ser mayúscula I, D en mayúscula. Ni siquiera sé cuántas veces he escrito accidentalmente ID con mayúsculas aquí. Y luego obtengo un error de JavaScript porque no sabe de qué estoy hablando. Así que llamo esto específicamente como un problema común y bien conocido, ten mucho cuidado al usar esto para usar una D en minúsculas allí en su lugar.

Porque el objeto document es una gran cosa con muchos objetos anidados dentro, si empezamos en la parte superior, podemos encontrar nuestro camino mediante esas propiedades y métodos a cualquier otra área dentro del objeto document."