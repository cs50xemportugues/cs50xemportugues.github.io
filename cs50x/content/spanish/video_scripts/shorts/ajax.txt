Mientras sigues explorando JavaScript, existe otra técnica que realmente puede ser útil a medida que comienzas a construir sitios web más complejos, y es el uso de algo llamado Ajax. Hasta ahora, en nuestra exploración de JavaScript, nos hemos limitado a hacer un par de cosas muy simples con el propósito de ilustración, como hacer clic en un botón y que algo suceda. Quizás el color cambia en tu sitio o quizás cambian un par de palabras. Pero el problema es que todo lo que hemos hecho hasta ahora ha sido del lado del cliente. Todo ocurre en nuestro ordenador. Nunca estamos realmente hablando con el mundo exterior. Sin embargo, podemos hablar con el mundo exterior y hacer cambios en nuestro sitio web, hacer algo que interactúe con el servidor, pero quizás no recargue toda nuestra página. Queremos crear una experiencia de usuario más agradable. Ajax nos permite hacerlo. Ajax solía significar algo llamado JavaScript asíncrono en XML. Eso es un acrónimo inverso. No se llama así realmente. Y en realidad, ahora se usa JSON en lugar de XML. Pero Ajax ha sido el nombre que se ha mantenido para la técnica. Y lo que Ajax nos permite hacer es actualizar, básicamente, secciones de nuestra página sin actualizar la página completa. Y si eres, por ejemplo, alguien que sigue deportes, podrías ver esto si estás en un sitio web deportivo donde se actualizan las puntuaciones de los juegos que están en curso, pero no se actualiza toda la página. Eso significa que la página está básicamente aprovechando Ajax para actualizar pequeñas secciones de la página. Las técnicas que se pueden hacer con Ajax son bastante ilimitadas. Se pueden hacer un montón de cosas diferentes con él. Y nos centraremos en un ejemplo muy específico donde, de nuevo, hacemos clic en un botón y algo sucede. Pero la diferencia es que esta vez, cuando sucede algo, estamos haciendo una solicitud al servidor. Estamos haciendo una solicitud saliente desde una página. No solo sucede en nuestra máquina. Pero se pueden hacer cosas como actualizar, por ejemplo, las puntuaciones deportivas en un sitio web que rastrea esa información o tu correo electrónico. Es posible que notes que a veces, cuando recibes un nuevo correo electrónico, todo el cuerpo de tu página se actualiza para poner ese nuevo correo electrónico en la parte superior de tu bandeja de entrada, pero no se actualiza toda la página. Eso también ocurre con Ajax. Pero se ejecuta constantemente todo el tiempo. Básicamente, está consultando para siempre. De nuevo, nos centraremos en hacer clic en un botón y que suceda algo, pero que lo que sucede no solo sea local a nuestra máquina. Entonces, para hacer esto, tenemos que crear otro tipo especial de objeto JavaScript llamado XMLHttpRequest. Y lo que hace es permitir que lo hagamos de manera asíncrona, no al mismo tiempo que la actualización de la página o la carga de la página, sino después de eso mientras aún estamos en la página. Eso es lo que queremos decir cuando decimos asíncrono. Nos permite hacer una solicitud asíncrona a un servidor para obtener más información. De hecho, es bastante fácil crear esto. Esta línea, por ejemplo, crearía un nuevo objeto de solicitud de XMLHttpRequest. Y en este caso, simplemente lo llamo xhttp y lo asigno a una variable local aleatoria en JavaScript. Una vez que tenemos el objeto, la primera cosa que tenemos que hacer es definir un comportamiento onreadystatechange. Onreadystatechange es solo una manera verbosa de describir los pasos que suceden cuando visitas una página. Por ejemplo, haces clic en... estás en una página. Actualizas la página. Todo se pone en blanco por un segundo, luego algunos datos comienzan a poblarse. Luego se detiene la actualización y ya estás listo. Eso pasa a través de una serie de diferentes estados, donde pasa de que la solicitud no se ha iniciado