Las declaraciones condicionales en C están disponibles para ser utilizadas en Python, pero pueden verse un poco diferentes ahora. En C, podríamos decir algo así como "si y es menor que 43, o si z es igual a 15" y luego tenemos algo de código. Pero en Python no se ve así. En lugar de eso, se ve un poco así: "Si y es menor que 43", o escribiendo literalmente la palabra "o" ahora, en vez de utilizar dos barras verticales, porque en Python podemos hacer eso. O "Si z es igual a 15:", en lugar de abrir llave y luego escribir el código y cerrar llave, y luego seguir con más código debajo. En Python, todos los comentarios son introducidos con el signo de almohadilla o hashtag, como esto: "#". Esto básicamente indica que esto es un comentario.

Aquí hay una declaración "if else" que quizás conozcas de C. En Python, se verá bastante similar. De nuevo, se ve así donde ahora tenemos "and" aquí. Por lo tanto, anteriormente en C, teníamos "si y es menor que 43 y z es igual a 15". En Python, al igual que en donde "or" se tradujo de dos barras verticales a la palabra "or", en Python hemos traducido dos y-comerciales a la palabra "and". Por lo tanto, ya no tenemos que usar dos y-comerciales, podemos simplemente escribir la palabra "and". Luego tenemos el "else" allí. El "else" no es una gran diferencia. Este es un poco diferente, sin embargo. Por lo tanto, si el número del curso es igual a 50, hacemos una cosa. Si no, si el número del curso no es igual a 51, hacemos otra cosa. En Python, no tenemos "else if", tenemos "elif", no "elseif". Pero de lo contrario, se comportará exactamente igual. De nuevo, intentando reducir un par de caracteres de lo que tenemos que escribir. Y de nuevo, en lugar de usar "curso_num no igual a 51", podemos hacer "elif not curso_num igual a 51". De nuevo, es un poco diferente, pero podemos usar estas palabras en inglés. No tenemos que usar el signo de exclamación, la barra vertical, el y-comercial, todos esos signos desaparecen y podemos comenzar a hablar en inglés casi en Python. Y esa es en realidad una de las razones por las que la gente encuentra que este lenguaje es popular, porque en general, si piensas que quieres escribir algo en inglés, estás bastante cerca de escribir lo mismo en Python.

Como señalé, no tenemos "else if", es solo una palabra aquí, "elif". Al igual que antes, terminamos nuestras líneas ahora con dos puntos y sangraremos nuestros bloques de código. Y como veremos un poco más tarde, sangrar en Python es muy, muy importante. También tenemos el operador ternario, "?:". Se ve un poco diferente. Voy a mostrarlo aquí para que lo veas, pero generalmente es un poco extraño, por lo que es posible que no lo uses con demasiada frecuencia. Aquí, estamos obteniendo un carácter en C, y luego si ese carácter es una letra, "alphabetic" se le asigna el valor "verdadero", de lo contrario, se le asigna el valor "falso". Aquí, esa línea se vería así. Es una sola línea de código, y tenemos nuestro "True" y "False". Observa que ahora están en mayúsculas en lugar de en minúsculas como en C. De nuevo, estas pequeñas diferencias de sintaxis son las cosas que cuando aprendes un nuevo lenguaje, son las cosas que van a variar un poco de un lenguaje a otro. Pero son los conceptos generales los que nos preocupan y estos se convertirán en una segunda naturaleza para ti bastante rápido si usas Python durante más de una semana o así.

Tenemos esta función llamada "input", que podemos usar. Es nativa de Python. Y podemos usarla para recopilar la entrada del usuario en la línea de comando, tal como lo hicimos en la biblioteca CS50 con "get_char", "get_float", "get_int", y así sucesivamente. Aunque esas funciones, de nuevo, también están disponibles para que las uses en Python. Las reescribimos en Python para ti.