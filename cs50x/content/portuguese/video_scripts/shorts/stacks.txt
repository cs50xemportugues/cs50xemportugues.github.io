Certo, nesse ponto você provavelmente está bastante familiarizado com arrays e linked lists, que são as duas principais estruturas de dados que discutimos até agora para manter conjuntos de dados com tipos de dados semelhantes organizados. Agora vamos falar sobre algumas variações de arrays e linked lists. Neste vídeo, vamos falar sobre pilhas, uma estrutura de dados específica chamada de stack. Lembre-se das discussões anteriores sobre ponteiros e memória, que a pilha também é o nome de um segmento de memória onde a memória declarada estaticamente – a memória que você nomeia, variáveis que você nomeia, e quadros de funções, que também chamamos de quadros da pilha – existe. Portanto, esta é uma estrutura de dados pilha, não um segmento de memória da pilha. OK? 

Mas o que é uma pilha? Basicamente é um tipo de estrutura que mantém os dados de uma forma organizada. E existem duas maneiras muito comuns de implementar pilhas usando duas estruturas de dados com as quais já estamos familiarizados: arrays e linked lists. O que torna uma pilha especial é a maneira como colocamos informações na pilha e a maneira como removemos informações da pilha. Especificamente, com as pilhas, a regra é: só o elemento adicionado mais recentemente pode ser removido. 

Então pense na pilha como se fosse uma pilha. Estamos empilhando informações umas sobre as outras, e somente aquilo que está no topo da pilha pode ser removido. Não podemos remover o elemento subjacente porque tudo mais poderia entrar em colapso e cair. Então, na verdade, estamos construindo uma pilha que precisamos remover, peça por peça. Por causa dessa restrição de como a informação pode ser adicionada e removida de uma pilha, realmente só há duas coisas que podemos fazer com uma pilha. Podemos empurrar (push), que é o termo que usamos para adicionar um novo elemento ao topo da pilha, ou se a pilha não existe e estamos criando-a do zero, o ato de criar a pilha em primeiro lugar seria uma operação push. E então temos o pop, que é o termo CS que usamos para remover o elemento adicionado mais recentemente do topo da pilha. 

Vamos analisar ambas as implementações, baseadas em arrays e linked lists. Vamos começar com a implementação baseada em arrays. Então, aqui está a ideia básica do que a estrutura de dados da pilha seria baseada em um array. Temos uma definição digitada aqui. Dentro disso, temos dois membros ou campos da estrutura. Temos uma matriz, e novamente estou usando o valor de tipo de dados arbitrários