So again, Python is not just a main function that we just run down the lines. In fact, Python doesn't have a main function by default. We have to explicitly force it to have a main function if we want to. But it does support functions more generally. And we don't need to specify the return type of functions. And we don't need to specify the data types of any parameters. So you might recall from C that we had to specify like int square maybe it took an integer as its input, so int square parentheses int x semicolon or all this stuff we have going on. We don't have to any of those data types. We just have to specify the name of the function and any parameters that it takes. We introduce a function using the keyword def. So basically, think about it as like defining the following function. And because the interpreter reads from top to bottom, we don't have to include our main function. But if we want to include main because maybe we wrote our code such that the stuff we want to execute first actually is maybe 200 lines into our file-- we wrote other stuff up above, maybe we're keeping our functions in alphabetical order or whatever else-- we can explicitly direct our program to start at the main function by including this line at the very, very end of our Python file. And this is just something to memorize. If underscore underscore name underscore underscore equals equals quote underscore underscore main underscore underscore quote colon and then tab in main parentheses. This is one of those things that you don't necessarily have to use because you write your code such that the first line is the first thing you want to happen it's going to be fine anyway. But if you write it out of order, this is just one of those things you just have to memorize. Sorry. So defining a function, pretty straightforward. Let's define the square of x like we just did a second ago in C. Def square parentheses x colon return x times x. Pretty straightforward. I could also do this. I could return x times times 2. Well, actually this operator here is a built in, which did not have, exponentiation operator. So this is return x squared. I could also be really convoluted and write my square function by adding x to itself x times. Doesn't really matter. As long as the result is the same, it can be a black box just like we talked about an out function video. We don't necessarily care how the square function is defined, as long as it does what we expect it to do. As long as printing the square of 5 prints out 25.