So in C, we had the notion of including files if we needed to get additional information from libraries, for example like standard IO or CS50 dot h. We can do the same thing in Python and C it was pound include. In Python, we import, and instead of being called header files or libraries, we generally call them modules. But we could import CD50, and if we do we could then call some of the CD50 functions we might be familiar with. We can do that by saying for example, CD50 dot get int parentheses. And that would, just like get int does in C, get an integer from the user. CS50 dot get float, dot get string, dot get char. All those things that you've used in C, we can still use them in Python. They just take a little longer to type. We have to specify CS50 dot, because CS50 is basically, not exactly, but it's basically a class where we're defining a couple of different methods within it that we can then invoke. You can, in addition to pre-writing your files in dot py files, you can also just literally write Python using the Python interpreter at the command line. You can type in your IDE or in a lot of environments Python, and then hit Enter and it will open a Python interpreter. And you can literally write Python one line at a time. In general though, if you're going to be writing more complex programs, you're probably going to want to pre-write them and then load them into the Python interpreter instead. To invoke the Python interpreter, particular in CS50 IDE but again more generally, Python space whatever the file you want to invoke is, and then what will happen is the interpreter will open that file and proceed one line at a time, top to bottom, executing your Python code. And if you really want to make your Python programs look and run a lot more like C programs-- for example, in C, once we compile a program into-- say we make hello, we then have dot slash hello-- we can include this line in red at the very top of our Python file. And then we can execute the line in blue after we're done saving the file. And then we can actually instead of typing Python and then some whatever we want to call it dot pie, we could then just write dot slash blah blah blah dot pie. So again, I know that was a long video, there was a lot to cover in that one. And we've really only just scratched the surface of introducing you to Python. But it is an amazing language, incredibly flexible, and it's a tool you're really going to want to put in your programmer's toolbox if you're ever doing anything like data science or complex string manipulation or really just familiarizing yourself with a language that you can use both at the command line and in a web development context. And we'll talk about how we can use Python in a web development context in another video on flask. I'm Doug Lloyd, this is CS50.