What I want to do now is go back into the IDE and show you a little bit about how-- show you a couple of examples of how we can actually manipulate the document object using JavaScript and jQuery to change the color of a section of a web page. All right. So here is a very simple web page-- and you can download this example when you're reviewing this video-- that has a whole bunch of different buttons. And as you can see at the top, there's a section that says "Change my color!" We're going to be trying to change the background color of that section of the page. And apparently, I'm going to do it four different ways.

There's individual functions for background color written in JavaScript; a single function to change the background color, so a bit of a design improvement perhaps; an event handler-- recall from the end of our video on JavaScript, we talked a little bit about event handlers, so this will be another opportunity to see those in action-- and one example where we do the exact same thing using jQuery instead of using raw JavaScript. So let's take a look at what the code for this site actually looks like.

In my IDE we'll open this tab. As you can see, I'm loading a couple of different JavaScript scripts at the beginning of my page, so I'm basically doing a pound include, the analogy here from C, of a couple of JavaScript files. And I have one file for each of the four different types of color manipulation we're going to do. And then here, it's not particularly well designed HTML, but it kind of gets the job done. I have one section with a set of five buttons for the background color ones, one for the passing in the color as a parameter, one for the event handler, and one for the jQuery ones. And they all look a little bit different.

So let's start by looking at the individual color ones.  So there's really not much to this. You saw that I wrote those five different functions, turn purple, turn green, turn orange, turn red, and turn blue. And all they do is, using pure JavaScript, they get the element by ID of colorDiv, which is the element that we're trying to change the background color of. And I set it's style backgroundColor attribute to purple, green, orange, red or blue, as described. So that's hopefully the most obvious. Then we have sort of a general purpose one, where instead we're passing in a color as a parameter.

So you may recall, looking back at our HTML for a second, for that one I'm passing in the colors purple, green, orange, red, and blue as parameters to that function. And in the general purpose one, I'm just saying whatever I passed in as a parameter, set the colorDiv's backgroundColor to that color instead. Then we have the event handler on. So recall-- if we take a look at the event handler one, the line looks exactly the same for all five of them. But you might remember from our discussion on event handlers that the way an event handler works is when you click on a button, for instance, the event handler captures some information about what triggered it to happen. So it knows, for example, which button you clicked. And all of those buttons-- I'm going to jump again to the HTML for a second. All of those buttons have a different title, purple, green, orange, red, and blue, with the capital letters there, that is the word that is actually going to appear on the button.

So I have a little bit of a way to distinguish between all of them. But as it turns out-- sorry about that. As it turns out, in order for my color changing to work, I can't pass in a capital letter color name. I have to pass in a lowercase one. So what I'm going to do instead is I'm going to set the document's-- the colorDiv's backgroundColor to whatever object triggered the event to be called in the first place. I'm going to look at its InnerHTML-- so here's that InnerHTML property coming into play.

And what I'm going to do to it is transform that entire string, so that capital P purple, into lowercase. So basically what happens here is when I click on a button, say I click on the purple button, what is happening is that capital P purple is being turned into all lowercase purple. And then that word "purple" is going to become the color that I'm setting the backgroundColor to. So hopefully that makes sense. Again, what I'm doing is I'm clicking on a button. That button has a title. I'm just taking the title of that button, the InnerHTML turmoil between the button tags, making it all lowercase. And that is then a color that I can assign the backgroundColor to. Again, you might play with this yourself when you're tinkering if you're following along with this video and maybe set some other different colors to see that you can make this change as well. And then we have the jQuery version of this. And we'll take a look at the HTML again for a second here.

Notice with this one, it looks a little bit different. I'm not specifying an onClick attribute this time. I'm creating a new class called a jQuery button. But there seems to be no function that gets called. Well, that's kind of a side effect of what is happening in jQuery. And the way jQuery works-- or one of the ways jQuery can work is that we can do something like this. This uses anonymous functions. Remember from JavaScript that we have this notion of anonymous functions. We can have functions that don't have names. So what's happening here is when the document-- there's that word "document" again-- when the document object is fully loaded or ready, the page is going to execute the following function. It's going to say, I'm going to look for every instance of something being of class-- that's what the little dot there, remember that from CSS-- of class JQ button appears on the page. And when any of those buttons is clicked, I'm going to execute this other anonymous function that is going to do basically what we just saw in the final example there, where we transformed the entire text of the button into lowercase and that becomes a color name that we can assign. But I'm just going to do it using jQuery syntax instead of JavaScript syntax. So again, what is happening here is the document, the page is fully loaded. And when the page is fully loaded, the following function is applied to the page.

Every jQuery button is given this extra attribute, this onClick attribute, such that when you click it, it assigns a color based on whatever the text is of the button. Again, we're not going to get into a lot of detail on jQuery itself. That's sort of an exercise for at home. But this version that you're seeing here is exactly the same as the event handler version we just saw for pure JavaScript, except written in jQuery style. And if I actually go to the page, all four of these do in fact work. I can click the purple one here, the green one here. I can click the orange one, red one. They all do the exact same thing. They just do it doing a couple of different-- using a couple of different techniques. So you can hopefully use this example to give yourself a better understanding of using functions in JavaScript, using events in JavaScript, and perhaps dipping your toe in the water of jQuery.

So if you want to learn more about jQuery beyond what we talk about in this video, you can go to the jQuery documentation, which is available at the website you see on the screen here. It's a great place to go to learn about some of the more interesting things that you can do with jQuery. And we'll see a little bit more about this in our video on AJAX as well.

I'm Doug Lloyd. This is CS50.