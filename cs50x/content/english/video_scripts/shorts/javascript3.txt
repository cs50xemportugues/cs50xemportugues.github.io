All right. Now, let's go back to loops, because I mentioned earlier, there are a couple of different new loops that we can use in JavaScript. So now that we have this object, how would we maybe iterate across all of the key value pairs of that object? Or in fact, how we iterate across all of the elements of an array, if we wanted to do that, besides using a for loop, a while loop, or a do-while loop? So in Python, we saw something like this-- for key in list, and then we would have some code where we would use key every point from there on down-- a stand in for the i-th element of the list. You can't do that in JavaScript, but we can do something pretty similar for var key in object. And then open curly brace. And between those curly braces, we can use object square bracket key to refer to the key-th element of the object, or the key-th key in a key value pair set of the object. We also have a slightly different variation for var key of object, which, instead of having to use object square bracket key, we can now refer to iterating across all of the values-- as opposed to this, which iterates across all the keys, this would iterate across the values. So we can cover both sides of a key value pair using for var key in, or for var key of. Here's an example of an array where we're going to use these two different types of loop. So we have here a week array that has 7 elements in it-- Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday. And I want to use a four var day in week array. So I want to use a for in loop, and I want to console dog log. Console dot log is the JavaScript equivalent of print f. You can access it using developer tools in most modern browsers. What's going to happen when they print this out? It's going to print out a list of all of the keys. Well, in this array, there's really no keys-- there's a bunch of indices. So this will print out 0, 1, 2, 3, 4, 5, 6, because there are seven elements of my array, and I am logging which element I'm talking about. If I wanted to print out the days instead, I would use a for of loop, and I would get the following printed out to the console-- Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday.