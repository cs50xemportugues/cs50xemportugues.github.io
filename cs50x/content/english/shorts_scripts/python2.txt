So variables have two big differences from C. We don't have to specify a type anymore so that's pretty cool. And we can declare them only by initialization. So you may recall in C that we could declare a variable by sayings for example int x semicolon, but not actually assign a value to it, not initialize it. In Python, we can only declare variables by initializing them. So where in C we might say something like this, int x equals 54 semicolon. In Python, we just say x equals 54 and that creates a new variable for us in Python called x and assigns it the value 54. And notice here, Python statements don't need to end with semicolons. So that might be a nice thing if you're the kind of person who like me oftentimes will forget to put a semicolon at the end of a line. In Python you don't need to include them. You can include them and it won't have a problem, but you can also omit them to make your code look a little bit cleaner. Similarly, can we declare the following, string phrase equals this is CS50, and to do this in C we would have to pound include the CS50 library because string is not a native data type in C. But it is in Python. We can just say, phrase equals this is CS50. And in fact, we don't even have to use double quotes. Python actually support strings with double quotes or single quotes. And this is actually really useful if you need to declare a string that has quotation marks in it, you can just kind of alternate back and forth between using single quotes on the outside, double quotes on the inside, single quotes inside of that, and so on, and that's actually kind of useful if you're the kind of person who's working with a lot of text for example in particular with databases.