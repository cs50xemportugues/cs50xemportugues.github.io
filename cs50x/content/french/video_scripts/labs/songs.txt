Dans ce laboratoire, votre tâche va consister à écrire des requêtes SQL qui peuvent répondre à des questions sur une base de données de chansons. Dans le cadre de ce laboratoire, nous vous donnerons une base de données sqlite appelée songs.db, dans laquelle se trouve des informations provenant de Spotify sur différentes chansons et leurs artistes. En fin de compte, la première chose que vous voudrez faire est de comprendre la structure ou le schéma des tables de cette base de données.

Dans songs.db, vous trouverez une table appelée songs qui a plusieurs colonnes différentes. Chaque chanson a un ID, qui est un entier, le nom de la chanson, qui est un texte, l'ID de l'artiste, qui est un entier représentant l'artiste de la chanson - nous y reviendrons dans un moment - et d'autres informations sur la chanson également - son rythme, son énergie, sa clé, sa sonorité, ainsi que d'autres propriétés de la chanson.

Maintenant, regardons l'ID de l'artiste. Pour représenter les différents artistes que les chansons peuvent avoir, il y a une autre table dans cette base de données appelée la table des artistes. Chaque artiste a un ID, qui est un entier, et un nom, qui sera juste un texte. Et maintenant, la colonne ID de l'artiste de la table des chansons va être un entier qui correspond à l'ID de l'un de ces artistes.

Alors regardons à quoi ressemble cette base de données. Une fois que j'ai téléchargé le laboratoire, dans mon terminal, je peux taper sqlite3 songs.db pour ouvrir cette base de données. Et si je le voulais, je pourrais taper ".schema" pour avoir une idée du schéma de cette base de données. Je verrais alors, voici CREATE TABLE songs, ainsi que toutes les colonnes pour les chansons, ainsi que CREATE TABLE artists, pour voir tous ces artistes.

Ainsi, si je voulais voir quelles étaient les chansons, par exemple, je pourrais écrire une requête SELECT * FROM songs, pour sélectionner toutes les chansons. Et je verrais toutes les chansons, ainsi que toutes les colonnes que j'ai pour chacune de ces lignes individuelles. Peut-être que je ne voulais pas toutes ces colonnes. Je pourrais donc filtrer mes résultats également. Je pourrais écrire une requête SELECT name FROM song pour simplement sélectionner la colonne de noms de ma table des chansons. Si je fais cela, alors je ne verrai que les noms de chacune de ces chansons.

En fin de compte, dans ce laboratoire, nous vous poserons huit questions différentes sur cette base de données, et votre tâche sera d'écrire des requêtes pour répondre à chacune de ces questions. Nous vous avons donné des fichiers dans lesquels vous pouvez mettre ces réponses. Par exemple, 1.sql est l'endroit où vous inclurez votre réponse à la première question, en écrivant une requête SQL ici que vous pouvez utiliser pour répondre à une question particulière.

Quelles pourraient être ces questions ? Eh bien, par exemple, dans 1.sql, vous allez écrire une requête SQL pour lister les noms de toutes les chansons de la base de données. Et cela, en fait, est une requête que je viens de vous montrer - SELECT name FROM songs. Ainsi, à l'intérieur de 1.sql, vous écrirez cette requête, SELECT name FROM songs, comme une requête que vous pourriez exécuter pour obtenir les noms de toutes les chansons dans la base de données.

En fin de compte, les autres questions vont vous demander d'autres informations sur la base de données. Peut-être pas seulement regarder les noms des chansons, mais peut-être regarder les artistes des chansons, regarder le volume de ces chansons, regarder leur rythme, peut-être d'autres facteurs également, filtrer et sélectionner et joindre les tables ensemble au besoin pour obtenir les résultats que vous voulez finalement pour répondre à toutes ces questions uniquement sur la base d'une seule base de données.

Mon nom est Brian, et c'était Songs.