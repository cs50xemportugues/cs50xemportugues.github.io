Dans ce laboratoire, votre tâche sera de créer un site web qui pose des questions triviales aux utilisateurs, puis qui en fonction de leur réponse, leur donne un retour basé sur la réponse correcte ou incorrecte à ces questions. Voici à quoi pourrait ressembler le produit fini. Vous n'avez pas besoin de choisir ces questions exactes, mais vous poserez une question à choix multiple avec plusieurs réponses différentes dont une est correcte, ainsi qu'une question à réponse libre, où l'utilisateur peut saisir sa propre réponse et vérifier si cette réponse est correcte.

Plongeons dans le code de distribution que nous vous donnons comme point de départ pour travailler sur ce laboratoire. À l'intérieur de index.html se trouve une page HTML qui va servir de point de départ pour ce site web. Vous remarquerez qu'en haut nous avons laissé un espace pour que vous ajoutiez du JavaScript, nous en parlerons un peu plus tard, mais JavaScript est l'endroit où vous apporterez ultimement un retour à l'utilisateur, ajoutant une certaine logique pour traiter des cas où l'utilisateur répond correctement à la question, ainsi que la logique pour traiter des cas où l'utilisateur répond incorrectement à la question.

Dans le corps de la page, nous affichons un gros titre en haut qui dit Trivia! Et ensuite, nous avons un titre plus petit qui dit Partie 1 : Choix multiple. C'est ici que vous allez ajouter votre question à choix multiple, poser la question mais aussi ajouter des boutons où l'utilisateur peut cliquer sur un bouton pour indiquer lequel des choix de réponse multiples il souhaite sélectionner. Ci-dessous se trouve la Partie 2, réponse libre, où vous inclurez votre question à réponse libre ainsi qu'un champ de texte, où l'utilisateur peut saisir sa réponse à votre question et un bouton où il peut soumettre sa réponse.

Pour exécuter votre site web, dans votre terminal lorsque vous êtes dans le répertoire du laboratoire, vous pouvez exécuter http-server pour démarrer un serveur HTTP. Cela vous donnera une URL à visiter sur le port 8080, et si je clique sur cette URL et clique sur Ouvrir, je pourrai choisir index.html, la page que je veux visiter, et ici vous verrez le contour que nous vous avons donné pour votre site web de trivia. Pour l'instant, il n'y a rien sous Partie 1 ou Partie 2, mais c'est là que vous intervenez, en fournissant la question et en ajoutant une logique pour gérer la réponse de l'utilisateur.

Alors que ferez-vous exactement dans ce laboratoire ? Dans la Partie 1 du laboratoire, vous commencerez par ajouter une question à choix multiple à la page HTML. Vous utiliserez un titre h3 pour le texte de la question, sachant qu'il y a des titres h1, h2, h3, h4, h5, et h6 pour des niveaux différents de titres. Nous avons déjà utilisé h1 et h2, donc h3 agira en tant que titre ici. Et ensuite, vous ajouterez un bouton pour chaque choix de réponse possible. Vous devriez avoir au moins trois choix de réponse différents que l'utilisateur peut choisir, dont exactement un doit être la réponse correcte.

Ensuite, vous souhaiterez écrire du JavaScript pour ajouter une certaine logique à cette partie de l'application. Lorsqu'un choix de réponse incorrect est cliqué, n'importe quel bouton qui est la mauvaise réponse, le bouton devrait devenir rouge et un texte devrait apparaître sous la question qui dit incorrect. Ainsi, le bouton devient rouge, le texte apparaît pour que l'utilisateur sache qu'il a répondu incorrectement à votre question. Pendant ce temps, lorsque le choix de réponse correct est cliqué, le bouton devrait devenir vert et le texte devrait apparaître sous cette question indiquant que l'utilisateur a répondu correctement à la question.

Pendant ce temps, dans la Partie 2, vous ferez quelque chose de très similaire, sauf que vous le ferez pour une question à réponse libre. Vous commencerez par choisir une question à réponse libre et ajouter cette question à la page HTML à nouveau, en utilisant un titre h3 pour le texte de la question. Mais cette fois-ci, au lieu d'un bouton pour chaque réponse possible, vous utiliserez une entrée pour la réponse et un bouton pour confirmer la réponse une fois que l'utilisateur a saisi sa réponse.

Encore une fois, vous utiliserez du JavaScript pour ajouter de la logique à ce site web également. Si l'utilisateur tape une réponse incorrecte, le champ de texte lui-même devrait devenir rouge et un texte devrait apparaître sous la question qui dit incorrect. En revanche, lorsque le choix de réponse correct est tapé et que l'utilisateur appuie sur le bouton, le champ de texte devrait devenir vert et du texte devrait apparaître sous la question indiquant que l'utilisateur a répondu correctement.

Lorsque vous essayez d'implémenter cette logique, il y a quelques techniques JavaScript qui vous seront sûrement utiles. La première est d'utiliser document.querySelector, sachant que vous pouvez utiliser document.querySelector pour sélectionner un élément de la page par son nom de balise, par son ID, ou par sa classe ou de certains autres sélecteurs CSS, et vous pouvez l'utiliser afin que dans votre code JavaScript vous puissiez accéder à un bouton par exemple, ou à un champ d'entrée pour accéder à ce que l'utilisateur a tapé ou pour faire quelque chose avec ce bouton, comme changer son style ou changer ce qui se trouve à l'intérieur de l'HTML d'un autre paragraphe qui existe sur votre page.

Vous voudrez également probablement utiliser la fonction addEventListener, qui permet d'ajouter du code qui peut répondre à un événement qui se produit sur votre page web. Par exemple, vous pourriez ajouter un écouteur d'événements à un bouton de sorte que lorsqu'un bouton est cliqué, vous allez exécuter une autre fonction. Cette fonction pourrait changer le style du bouton pour qu'il ait une couleur rouge ou une couleur verte, ou elle pourrait changer l'HTML d'une partie de votre page pour afficher un texte, comme correct ou incorrect, ou elle pourrait même faire une combinaison des deux. addEventListener est un outil très puissant en JavaScript pour vous permettre d'avoir un code JavaScript qui peut répondre à des événements qui se produisent réellement sur votre page.

En fin de compte, une fois que vous avez ajouté le HTML et le JavaScript nécessaires, vous devriez avoir un site web de trivia fonctionnel où vous pouvez afficher une question à choix multiple et une question à réponse libre et donner à l'utilisateur un retour en fonction de s'il répond ou non à ces questions correctement.

Je m'appelle Brian, et c'était de la trivia.