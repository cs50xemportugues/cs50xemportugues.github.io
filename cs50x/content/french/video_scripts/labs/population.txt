Dans ce laboratoire, votre tâche sera d'écrire un programme pour simuler la croissance de la population. Imaginons que nous avons une population d'animaux, une population de lamas, par exemple. Chaque année, nous perdons certains animaux de cette population lorsque les lamas plus âgés meurent. Mais nous gagnons également des animaux pour cette population lorsque de nouveaux lamas naissent.

Nous pouvons modéliser ce type de croissance de population à l'aide d'une formule mathématique. Supposons, par exemple, que chaque année, si nous avons une population de n lamas, nous gagnons n divisé par 3 lamas et nous en perdons n divisé par 4. Ainsi, dans une population de 12 lamas, par exemple, l'année suivante, nous gagnerons 12 divisé par 3, soit quatre nouveaux lamas. Et nous en perdrons 12 divisé par 4, soit trois lamas, dans ce cas.

Donné cette configuration, nous pouvons nous poser une question. Par exemple, nous pourrions demander, combien d'années cela prendrait pour passer de 20 lamas de population à 30 lamas de population? Actuellement, par exemple, nous avons 20 lamas dans cette population. Mais après un an, nous gagnerions 20 divisé par 3 lamas.

Remarquez maintenant que 20 ne se divise pas uniformément par trois. Et par conséquent, nous devons simplement tronquer ce qui viendrait après la décimale. La réponse réelle va donc être six quelque chose. Mais comme nous ne pouvons pas avoir une fraction d'animal, nous allons simplement tronquer tout ce qui vient après la décimal et dire que nous gagnons six lamas.

Et nous allons perdre 20 divisé par 4, ce qui correspond bien à cinq lamas. Ainsi, après un an, nous aurons maintenant 21 lamas. Nous pouvons ensuite répéter le processus et considérer ce qui pourrait se produire l'année suivante.

L'année suivante, nous gagnerions 21 divisé par 3, soit sept lamas. Et nous en perdrons 21 divisé par 4, en tronquant ce qui suit la décimale, perdant cinq lamas. Ce qui signifie que nous avons un changement net de deux lamas. Ce qui signifie qu'après deux ans, nous avons maintenant 23 lamas.

Après l'année suivante, nous gagnerions sept lamas, en perdant cinq, pour un nouveau total de 25 lamas après trois ans. L'année suivante, nous gagnerions huit lamas et en perdrons six, pour un nouveau total de 27 lamas après quatre ans. Et puis à la cinquième année, nous gagnerions neuf lamas et en perdrons six pour un total maintenant de 30 lamas après cinq ans.

Donc, la réponse à la question, combien d'années cela prendrait il pour passer d'une population de 20 lamas à une population de 30 lamas est cinq ans. Maintenant, nous avons fait tout cela manuellement. Mais votre tâche maintenant sera d'écrire un programme en C qui peut faire ce calcul pour nous.

Le programme fonctionnera comme ceci. À la ligne de commande, vous exécuterez un programme, ./population. Et à ce moment-là, votre programme devrait demander à l'utilisateur une taille de population de départ. Vous pourriez taper une taille de population de départ de 100, par exemple. Ensuite, votre programme devrait demander à l'utilisateur une taille de population finale. Et l'utilisateur saisira une autre taille de population, disons 200, par exemple.

Ensuite, votre programme devrait déterminer combien d'années il faudrait pour amener la population de lamas de la taille de départ à la taille finale, puis imprimer le nombre d'années. Ainsi, dans ce cas, notre programme imprimerait années: 9 car il faudrait neuf ans pour amener la population de 100 à 200 lamas.

Donc, en résumé, voici ce que vous devez faire. Tout d'abord, commencez par demander à l'utilisateur la taille de population de départ de votre population de lamas. Et vous devez vérifier que l'entrée de l'utilisateur est d'au moins neuf. La taille de la population doit être d'au moins neuf pour que nous puissions réellement commencer à faire pousser cette population de lamas.

Donc, si l'utilisateur tape un nombre inférieur à neuf, vous devez continuer à demander à l'utilisateur de taper un nombre à nouveau jusqu'à ce qu'il vous donne un nombre d'au moins neuf.

Ensuite, vous devez demander à l'utilisateur la taille de population finale, en faisant attention à ce que l'entrée de l'utilisateur soit aussi grande que la taille de départ. Il n'aurait pas de sens, par exemple, d'imaginer la population passant d'une population de 100 à une population de 50 car la population va toujours croître. Vous voudrez donc vous assurer que la taille de population finale est supérieure ou égale à la taille de population de départ. Si l'utilisateur essaie de taper une taille de population finale inférieure à la taille de population de départ, alors votre programme doit continuellement redemander à l'utilisateur de taper une autre taille de population finale jusqu'à ce qu'il vous en donne une qui est au moins égale à la taille de population de départ.

Après cela, votre programme doit calculer combien d'années seraient nécessaires pour amener la population de la taille de départ à la taille finale, en rappelant qu'à chaque année, nous allons ajouter n divisé par 3 lamas, s'il y a n lamas au départ. Et nous allons perdre n divisé par 4 lamas. Et comme auparavant, comme nous ne pouvons pas avoir des fractions de llama, si l'un de ces calculs se termine par quelque chose après la décimale, vous allez tronquer ou ignorer ce qui suit cette décimale lors de votre calcul. Enfin, une fois que vous avez effectué ce calcul, vous allez imprimer le nombre d'années requis. Imprimer années colon et ensuite le nombre d'années qui serait nécessaire pour amener la population à cette taille de population finale.

Lorsque vous commencez à travailler sur ce problème, il y a quelques stratégies qui pourraient s'avérer utiles. L'une d'elles est une boucle do while, un type de boucle qui vous permet de demander à l'utilisateur une ou plusieurs fois quelque chose, dans ce cas. Donc dans la boucle que vous voyez ici, nous commençons par déclarer une variable appelée n. Et puis dans une boucle, nous demandons à l'utilisateur un entier positif, stockant cet entier dans n.

Mais nous allons répéter cette boucle tant que n est inférieure à 1. Cela signifie que si l'utilisateur ne tape pas un entier positif, nous allons lui redemander. Vous n'utiliserez pas ce code exact dans votre laboratoire, mais vous pouvez utiliser quelque chose de similaire, à la fois lorsque vous demandez la taille de population de départ pour vous assurer que la taille de population de départ est d'au moins neuf, et également lorsque vous demandez la taille de population finale pour vous assurer que la taille de population finale est au moins aussi grande que la taille de population de départ.

Vous pouvez également trouver utile de mettre à jour une variable au fur et à mesure que vous travaillez sur ce laboratoire. Vous voudrez peut-être mettre à jour votre variable de taille de population à plusieurs reprises, par exemple, afin d'ajouter de nouveaux lamas et de se débarrasser des vieux lamas. Vous pouvez le faire en utilisant une formule comme celle-ci. Si vous avez une variable appelée n à l'intérieur de laquelle se trouve votre population actuelle, vous pouvez mettre à jour la valeur de n pour l'année suivante en utilisant une ligne qui dit n égale n plus n sur 3, le nombre de lamas que nous ajoutons, moins n sur 4, le nombre de lamas que nous perdons cette année-là.

Et enfin, une fois que vous avez terminé le calcul, vous pouvez imprimer une variable en utilisant la fonction print f, en disant, printf années colon, et ensuite %i, où %i va remplacer un entier. Quel entier Eh bien, celui que vous spécifiez après une virgule. Et ici, nous disons, imprimez la valeur de n comme l'entier à imprimer pour l'utilisateur.

Jetons maintenant un coup d'œil au code de distribution que nous vous donnons comme point de départ pour ce problème. Ici, dans population.c, nous avons déjà inclus cs50.h et stdio.h pour vous. Puis nous vous donnons une fonction principale avec quelques to-dos pour commencer.

Vous allez d'abord demander la taille de départ, puis demander la taille n. Ensuite, calculez combien d'années il faudra pour atteindre cette valeur seuil de la taille de la taille de départ à la taille n. Et enfin, une fois que vous avez effectué ce calcul, vous imprimez le nombre d'années qui serait nécessaire pour vous emmener du début à la fin.

Une fois que vous avez écrit toutes ces pièces, vous devriez pouvoir compiler votre programme et ensuite l'exécuter, en donnant à votre programme une taille de population de départ et une taille de population finale. Et ensuite, votre programme devrait être capable de vous dire combien de temps il faudra pour passer du point A au point B.

Mon nom est Brian. Et c'était la croissance de la population.