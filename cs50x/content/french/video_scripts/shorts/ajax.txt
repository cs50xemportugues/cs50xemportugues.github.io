Alors que vous continuez votre exploration de JavaScript, il y a une autre technique qui pourrait vraiment vous être utile lorsque vous commencez à construire des sites web plus complexes, et c'est en utilisant quelque chose appelé Ajax. Jusqu'à présent, dans notre exploration de JavaScript, nous nous sommes limités à faire quelques choses simples à des fins d'illustration, comme cliquer sur un bouton et quelque chose se produit. Peut-être que la couleur change sur votre site, ou peut-être que quelques mots changent. Mais le hic, c'est que tout ce que nous avons fait jusqu'à présent a été côté client. Tout se passe sur notre ordinateur. Nous ne parlons jamais vraiment avec le monde extérieur. Cependant, nous pouvons parler avec le monde extérieur et apporter des modifications à notre site web, faire quelque chose qui interagit avec le serveur, mais peut-être que cela ne recharge pas toute notre page. Nous voulons créer une expérience utilisateur plus agréable. Ajax nous permet de le faire. Ajax signifiait autrefois quelque chose appelé Asynchronous JavaScript in XML. C'est un acronyme arrière. Ce n'est plus vraiment comme ça qu'on l'appelle. Et en fait, le plus souvent maintenant, au lieu de XML, nous utilisons JSON. Mais Ajax est juste le nom qui est resté pour la technique. Et ce que Ajax nous permet de faire, c'est de rafraîchir, en gros, des sections de notre page sans la page entière. Et si vous êtes, par exemple, quelqu'un qui suit les sports, vous pourriez voir cela si vous êtes sur un site de sports où les scores des matchs en cours sont mis à jour, mais toute la page ne se rafraîchit pas. Cela signifie que la page utilise essentiellement Ajax pour mettre à jour de petites portions de la page. Les techniques que vous pouvez utiliser avec Ajax sont assez limitées. Vous pouvez faire beaucoup de choses différentes avec elle. Et nous allons nous concentrer sur un exemple très spécifique où, encore une fois, nous cliquons sur un bouton et quelque chose se produit. Mais la différence, c'est que cette fois-ci, lorsque quelque chose se produit, nous faisons une demande au serveur. Nous faisons une demande sortante depuis une page. Ce n'est pas seulement quelque chose qui se passe sur notre machine. Mais vous pouvez faire des choses comme mettre à jour, par exemple, les scores de sports sur un site web qui suit cette information ou votre e-mail. Vous pouvez remarquer que parfois, lorsque vous recevez un nouvel e-mail, tout le corps de votre page se rafraîchit pour mettre ce nouvel e-mail en haut de votre boîte de réception, mais toute la page ne se rafraîchit pas. Cela se produit également avec Ajax. Mais cela fonctionne constamment tout le temps. On interroge essentiellement à jamais. Nous allons encore une fois nous concentrer sur le fait de cliquer sur un bouton et que quelque chose se passe, mais que cette chose ne soit plus seulement locale à notre machine. Pour ce faire, nous devons créer un autre type spécial d'objet JavaScript appelé XMLHTTPRequest. Et ce que cela fait, c'est qu'il nous permet de le rendre asynchrone, donc pas en même temps que le rafraîchissement de la page ou le chargement de la page, mais quelque temps après, alors que nous sommes toujours sur la page. C'est ce que nous voulons dire quand nous disons asynchrone. Cela nous permet de faire une demande asynchrone à un serveur pour obtenir plus d'informations. Heureusement, c'est en fait très facile à créer. Cette ligne, par exemple, créerait un nouvel objet de demande HTTP XMLHttpRequest. Et dans ce cas, j'appelle simplement cela xhttp et je l'assigne à une variable locale aléatoire en JavaScript. Une fois que vous avez l'objet, la première chose que vous devez faire est de définir